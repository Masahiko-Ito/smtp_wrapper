smtp_wrapper-0.1 -- SMTP filtering support daemon
Copyright (C) 2006  Masahiko Ito

These programs is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

These programs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with these programs; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Mail suggestions and bug reports for these programs to
"Masahiko Ito" <m-ito@mbox.kyoto-inet.or.jp>

History
=======

2005/11/25 Develop started
2006/01/23 First release(0.1)

What's this ?
=============

主にspam対策としてsmtp serverと自作のspamチェックスクリプトを連係さ
せるためのデーモンプログラムです。

spam対策としては既にいくつかの定番的手法が確立しています。クライアン
ト側からのアプローチとしてはベイズ理論を利用したフィルタプログラム + 
procmailの組合せであったり、サーバ側からのアプローチとしてはMILTER対
応した同様のフィルタ + sendmailの組合せであったりするようです。

ベイズ理論を利用したフィルタは実際、非常に効果があります。ただし、学
習効果を積み重ねて行くうちにデータベースが肥大化していき、徐々に動き
が重くなって来るような気がします。そんなおり、ウェブ上で以下の情報を
見つけました。

  o 阻止率99%のスパム対策方式の研究報告
    (Selective SMTP Rejection (S25R)方式)
  - http://www.gabacho-net.jp/anti-spam/

  o spam
  - http://moin.qmail.jp/spam

上記のページ内容を自分なりに要約した結果、

  o 接続元IPがDNSの逆引出来なければ拒否
    -> 逆引出来ないSMTPサーバからのメールの多くはspamである。
  o 接続元IPがDNSの逆引結果(FQDN)から動的IPと類推される場合は拒否
    -> 動的IPを持ったSMTPサーバからのメールの多くはspamである。
  o 接続要求に対して、一定時間接続を遅延させる
    -> spamを送信するSMTPサーバの多くは大量かつ高速にメール配信するこ
       とを第一目的としており、応答の鈍いサーバに対しては早々に配信を
       諦めて接続を切断する傾向に有る。

という3手法のみでも、かなり高い確立でspamを排除できるのではないかと
考えました。しかも、上記の方法はメール内容そのものは判断しないので、
チェックにかかる負荷も非常に軽いことが予想されます。

で、実際にどのように実装するかということになると、上記のページではMTA
がqmailである事が前提となる説明がされていて、sendmailとの組合せとな
ると自力でなんとかしなければならないようです。

正攻法で行くなら、MILTERを利用したフィルタを作成するべきでしょう。お
そらく最も高いパフォーマンスでspamチェックをこなしてくれると思います。

MILTERを利用するにはlibmilterを利用してC言語でフィルタを作成します。
ドキュメントはsendmailのソースディレクトリ中のlibmilter/docs/以下に
有りますので、それを参考に作業します.....が、ごめんなさい。私には
MILTERを理解してフィルタを書くことが出来ません、というかドキュメン
トを読解する気力がありませんでした(^_^;。ですので別のアプローチで
実装することにしました。

実装するに当たって以下の点に留意しました。

  o フィルタはそこいらのスクリプト言語(sh, perl, ruby ...)で書きたい。
  o どうせならspamチェック以外の機能も簡単に盛り込めるようにしておき
    たい。
  o フィルタは「フィルタ」ちゅうぐらいですから標準入力を読んで、結果
    を標準出力に出力するだけで機能するようにしたい。

とりあえず志は低く、上記の3点を実現するためにsmtp proxy的なデーモン
を作ってみました。

Install
=======

o cd /usr/local/
o tar xvzf smtp_wrapper-0.1.tar.gz
o cd smtp_wrapper-0.1
o cc -o smtp_wrapper smtp_wrapper.c
o vi filter_script
o chmod +x filter_script
o smtp_wrapper -h

  Usage : smtp_wrapper [-mh hostname] [-mp port] [-q backlog] 
                       [-sh smtpserver_hostname] [-sp smtpserver_port] 
                       [-t timeout_sec] [-d delay_sec] [-f filter] 
                       [-cm child_max] [-F]
    -mh hostname            : my hostname [ANY]
    -mp port                : my port [25]
    -q  backlog             : socket queue number [5]
    -sh smtpserver_hostname : real smtp hostname [localhost]
    -sp smtpserver_port     : real smtp port [8025]
    -t  timeout_sec         : timeout second [no timeout]
    -d  delay_sec           : delay second for initial connection [0]
    -f  filter              : filter program 
                              [/usr/local/smtp_wrapper/smtp_filter]
    -cm child_max           : max number of connection to real smtp daemon 
                              [10]
    -F                      : run in foreground

sendmailの設定
==============
 
o vi sendmail.mc
  以下の定義を追加
  DAEMON_OPTIONS(`Port=8025, Name=MTA')dnl
o vi submit.mc
  以下の定義を追加
  DAEMON_OPTIONS(`Port=8025, Name=NoMTA, Addr=127.0.0.1, M=E')dnl
o sendmail.cf, submit.cfを更新

sendmail.cf
-----------
O DaemonPortOptions=Port=8025, Name=MTA

submit.cf
---------
O DaemonPortOptions=Port=8025, Name=NoMTA, Addr=127.0.0.1, M=E

起動
====

o vi /etc/rc.d/rc.local

  if [ -x /usr/local/smtp_wrapper-0.1/smtp_wrapper ]
  then
      /usr/local/smtp_wrapper-0.1/smtp_wrapper \
          -t 600 \
          -d 10 \
          -f /usr/local/smtp_wrapper-0.1/filter_script
      echo ' smtp_wrapper'
  fi

o reboot

Figure
======

            +-----------------------------------------------------------+
            |                                                           |
            |                                                           |
 +-----+ command  +------------------+  command   +----------------+    |
 |     |--------->|(1)            [2]|----------->|                |    |
 | MTA |SOCKET(25)|   smtp_wrapper   |SOCKET(8025)|       MTA      |    |
 |(MUA)|<---------|[1]            (2)|<-----------| (sendmail etc) |    |
 |     | response |                  |  response  +----------------+    |
 +-----+    |     |     (3)  [3]     |                                  |
            |     +------+----+------+                                  |
            |            A P  |                                         |
            |            | I  |                                         |
            |            | P  |                                         |
            |            | E  |                                         |
            |   (stdout) |    V (stdin)                                 |
            |          +--------+                                       |
            |          |        |                                       |
            |          | FILTER |                                       |
            |          |        |                                       |
            |          +--------+                                       |
            |                                                           |
            |                                                           |
            +-----------------------------------------------------------+

  o smtp_wrapper(親)が本来のMTAに代ってsmtp(25)ポートへの接続を監視します。

  o 接続を受けたsmtp_wrapper(親)は、`-d'オプションで指定した秒数sleepした
    後に子プロセス(smtp_wrapper(子))を生成し、以降の接続元との通信を子プロ
    セスにまかせ、再度smtp(25)ポートの監視を繰り返します。また、接続を受け
    た時点で、今現在稼働しているsmtp_wrapper(子)の数が`-mc'オプションで指
    定した数を越えている場合、その数が`-mc'オプションの指定値の2分の1未満
    になるまで`-d'オプションで指定した秒数のsleepを繰り返します。

  o smtp_wrapper(子)は接続元のIPアドレスを環境変数`SW_FROM_IP'に設定したの
    ちフィルタプログラムをfork&execします。

  o smtp_wrapper(子)は接続元からのメッセージのうち`HELO|EHLO'、`MAIL FROM:'、
    `RCPT TO:'等の`DATA'コマンドまでのメッセージを本来のMTA(上図では、待ち
    受けポートを8025に変更)とフィルタプログラムに渡し、MTAからの応答メッセー
    ジを接続元に渡します。その後`DATA'から`.'をフィルタプログラムのみに渡
    した後、フィルタプログラムからの応答(チェック結果)を待ちます。

  o フィルタプログラムは環境変数`SW_FROM_IP'と(必要であれば)受け渡されたメッ
    セージ本文から正当なメッセージか不当なメッセージかを判断し、正当なメッ
    セージと判断した場合は受け渡されたメッセージのうち`DATA<CR><LF>'から
    `.<CR><LF>'までを標準出力に出力させます。また不正メッセージと判断した
    場合は直ちに終了するか、`DATA<CR><LF>'以外で始まるメッセージを標準出力
    に出力した後、終了させます。

  o smtp_wrapper(子)はフィルタプログラムからのメッセージが`DATA<CR><LF>'で
    始まっていた場合、それを正当なメッセージとみなし、本来のMTAに受け渡しま
    す。またメッセージが`DATA<CR><LF>'以外で始まっていた場合、それを不正な
    メッセージ(spam)とみなし、接続元に`450'で始まる一時エラー応答を返します。

  o 以降、smtp_wrapper(子)は接続元から`QUIT<CR><LF>'を受け取るまで、または
    接続元<->smtp_wrapper(子)間のコネクションが切断されるまで、または
    smtp_wrapper(子)<->本来のMTA間のコネクションが切断されるまで上記の動作
    を繰り返します。

Command sequence
================

 stat|command/response|in       |out      |stat|comment
-----+----------------+---------+---------+----+-------------------------
 1   |QUIT            |(1)      |   [2]   |8   |
     |                |         |         |    |
 1   |HELO            |(1)      |   [2][3]|1   |
 1   |RES(HELO)       |   (2)   |[1]      |1   |
 1   |MAIL FROM:      |(1)      |   [2][3]|1   |
 1   |RES(MAIL FROM:) |   (2)   |[1]      |1   |
 1   |RCPT TO:        |(1)      |   [2][3]|1   |
 1   |RES(RCPT TO:)   |   (2)   |[1]      |1   |
     |                |         |         |    |
 1   |DATA            |(1)      |      [3]|2   |
 2   |FAKERES(DATA)   |         |[1]      |3   |354 fake ack
     |                |         |         |    |
 3   |MESSAGES        |(1)      |      [3]|3   |
[3   |ANYDATA         |      (3)|[1]      |1   |450 temporary error]
     |                |         |         |    |
 3   |.               |(1)      |      [3]|4   |
     |                |         |         |    |
 4   |DATA            |      (3)|   [2]   |5   |
[4   |!DATA           |      (3)|[1]      |1   |450 temporary error]
     |                |         |         |    |
 5   |RES(DATA)       |   (2)   |---------|6   |no response
     |                |         |         |    |(already responsed 354)
[5   |RES(DATA)       |   (2)   |[1]      |1   |!354 then 450 temporary 
     |                |         |         |    |error for .]
     |                |         |         |    |
 6   |MESSAGES        |      (3)|   [2]   |6   |
 6   |.               |      (3)|   [2]   |7   |
 7   |RES(.)          |   (2)   |[1]      |1   |
     |                |         |         |    | 
 8   |RES(QUIT)       |   (2)   |[1]      |    |exit

Filter
======

フィルタの基本的な構造は以下のように作成してください。

o 必要に応じて、環境変数`SW_FROM_IP'に設定されている接続元の
  IPおよびIPから逆引したFQDNをチェックし、不正接続と判断した
  ならexitしてください。また、exit直前にstdoutに出力した内容
  の最初の1行がsyslog経由(mail.info)で記録されます。その際の
  出力には`DATA<CR><LF>'を含めないで下さい(smtp_wrapperが正当
  なメールと誤判断してしまうので)。

o *必ず*、一旦stdinからの入力を全てテンポラリファイルに書き出
  して下さい。通常stdinからは`HELO ...<CR><LF>'または`EHLO ...<CR><LF>'
  または`MAIL FROM: ...<CR><LF>' -> いくつかのSMTPコマンド 
  -> `DATA<CR><LF>' -> メール本文 -> `.<CR><LF>'の順でデータ
  が入って来るでしょう...。

o *必ず*、上述のテンポラリファイル中の`RCPT TO:'の内容と環境
  変数`SW_FROM_IP'の内容から不正リレー(第三者リレー)をチェッ
  クし、不正接続と判断したならexitしてください。

  smtp_wrapperを利用すると(おそらく)sendmailでの/etc/mail/access
  等を用いた第三者リレーチェックが効かなくなります。sendmail
  から見ると接続して来るサーバは全て自分自身(smtp_wrapper)な
  ので判断のしようが無いためです :-P

o 必要に応じて、上述のテンポラリファイルの内容によりチェック
  (spam,virus etc)を行い、不正接続と判断したならexitしてくだ
  さい。

o 必要に応じて、その他の必要な処理(ヘッダー挿入、内容改竄、
  極秘保存等)を行って下さい B-)

o 最終的に、正当な接続と判断されたなら、上述のテンポラリファ
  イルから`DATA<CR><LF>' -> メール本文 -> `.<CR><LF>'をstdout
  に出力しexitしてください。

